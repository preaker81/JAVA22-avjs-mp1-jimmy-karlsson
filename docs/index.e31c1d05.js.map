{"mappings":"AAOA,MAAMA,EAAgBC,SAASC,iBAAiB,oBAC1CC,EAAcF,SAASG,cAAc,sBACrCC,EAAoBJ,SAASG,cAAc,wBAC3CE,EAAkBL,SAASG,cAAc,oBACzCG,EAAa,CACf,CACIC,KAAM,OACNC,MAAO,IACPC,MAAO,YAEX,CACIF,KAAM,QACNC,MAAO,IACPC,MAAO,QAEX,CACIF,KAAM,WACNC,MAAO,KACPC,MAAO,UAsCf,SAASC,EAAeC,GACpBA,EAAUC,UAAYC,SAASF,EAAUC,WAAa,CAC1D,CAGA,SAASE,EAAmBC,EAAWC,GACnC,MAAMC,EAAMjB,SAASkB,cAAc,OACnCD,EAAIL,UAAYG,EAAUP,MAC1BS,EAAIE,UAAUC,IAAI,mBACdJ,GAAQC,EAAIE,UAAUC,IAAI,UAC9BlB,EAAYmB,MAAMJ,EACtB,CAGA,SAASK,EAASP,EAAWQ,GACzB,OAAOR,EAAUN,QAAUc,EAAkBhB,IACjD,CAjDIP,SAASwB,eAAe,iBAAiBC,iBAAiB,UAAUC,IACpEA,EAAMC,iBACN3B,SAASwB,eAAe,cAAcZ,UAA0D,IAA9CZ,SAASwB,eAAe,aAAaI,MAAc,SAAW5B,SAASwB,eAAe,aAAaI,MACrJ5B,SAASwB,eAAe,aAAaI,MAAQ,GAC7C5B,SAASwB,eAAe,iBAAiBK,UAAY,GACrD7B,SAASC,iBAAiB,cAAc6B,SAAQC,GAAWA,EAAQZ,UAAUa,OAAO,eAIxFjC,EAAc+B,SAAQG,IAClBA,EAAaR,iBAAiB,SAASC,IACnC,MAAMQ,EAAgBD,EAAaE,QAAQpB,WAOnD,SAAuBA,GACnB,MAAMqB,EAiCV,WACI,MAAMC,EAAcC,KAAKC,MAAMD,KAAKE,SAAWlC,EAAWmC,QAC1D,OAAOnC,EAAW+B,EACtB,CApC8BK,GACpBC,EAAerB,EAASP,EAAWqB,GACnCQ,EAAiBtB,EAASc,EAAmBrB,GAEnDD,EAAmBsB,EAAmBQ,GACtC9B,EAAmBC,EAAW4B,GAE1BA,GAAcjC,EAAeL,GAC7BuC,GAAgBlC,EAAeN,IA+BvC,SAAiByC,EAAaC,GAC1B,GAA6B,GAAzBD,EAAYjC,WAA6C,GAA3BkC,EAAclC,UAAgB,CAC5D,MAAMI,EAAS6B,EAAYjC,UAAYkC,EAAclC,UAAYZ,SAASwB,eAAe,cAAcZ,UAAY,WAG7GmC,EAAc/C,SAASC,iBAAiB,cAC9C,IAAK,MAAM+C,KAAcD,EACrBC,EAAW7B,UAAUC,IAAI,UAI7B,MAAMH,EAAMjB,SAASkB,cAAc,OACnCD,EAAIE,UAAUC,IAAI,cAElB,MAAM6B,EAAKjD,SAASkB,cAAc,MAClC+B,EAAGC,aAAa,KAAM,aACtBD,EAAGrC,UAAY,GAAGI,mBAElB,MAAMmC,EAAMnD,SAASkB,cAAc,UACnCiC,EAAIvC,UAAY,WAChBuC,EAAID,aAAa,KAAM,cACvBC,EAAI1B,iBAAiB,SAAS,KAC1B2B,SAASC,QAAM,IAGnBrD,SAASG,cAAc,eAAemD,OAAOrC,GAC7CA,EAAIqC,OAAOL,EAAIE,EACnB,CACJ,CAzDII,CAAQlD,EAAiBD,EAC7B,CAjBQoD,CADkBlD,EAAWmD,MAAK1C,GAAaA,EAAUR,OAAS2B,IACpD,GAClB","sources":["src/main.js"],"sourcesContent":["// const img = document.createElement('img');\r\n// const imgUrl = new URL('./media/placeholderImage.png', import.meta.url);\r\n// img.src = imgUrl.href;\r\n// document.body.append(img);\r\n\r\n// console.log(import.meta);\r\n\r\nconst selectionBtns = document.querySelectorAll('[data-selection]');\r\nconst finalColumn = document.querySelector('[data-finalColumn]');\r\nconst computerScoreSpan = document.querySelector('[data-computerScore]');\r\nconst playerScoreSpan = document.querySelector('[data-yourScore]');\r\nconst selections = [\r\n    {\r\n        name: 'rock',\r\n        emoji: '✊',\r\n        beats: 'scissors'\r\n    },\r\n    {\r\n        name: 'paper',\r\n        emoji: '✋',\r\n        beats: 'rock'\r\n    },\r\n    {\r\n        name: 'scissors',\r\n        emoji: '✌️',\r\n        beats: 'paper'\r\n    }\r\n];\r\n\r\n// Eventlistener to Name input field and sets the player name. Removes inputfield after input.\r\n    document.getElementById('formNameInput').addEventListener('submit', event => {\r\n    event.preventDefault();\r\n    document.getElementById('playerName').innerText = document.getElementById('inputText').value == '' ? 'Player' : document.getElementById('inputText').value;\r\n    document.getElementById('inputText').value = '';\r\n    document.getElementById('formNameInput').innerHTML = '';\r\n    document.querySelectorAll('.selection').forEach(Element => Element.classList.remove('hidden'));\r\n});\r\n\r\n// Sets eventlisteners to the game buttons.\r\nselectionBtns.forEach(selectionBtn => {\r\n    selectionBtn.addEventListener('click', event => {\r\n        const selectionName = selectionBtn.dataset.selection;\r\n        const selection = selections.find(selection => selection.name === selectionName);\r\n        makeSelection(selection)\r\n    })\r\n});\r\n\r\n// Main game function\r\nfunction makeSelection(selection) {\r\n    const computerSelection = computerRandomSelect(); //Enter result of computer choise to variable\r\n    const playerWinner = isWinner(selection, computerSelection); //Checks if player is round winner\r\n    const computerWinner = isWinner(computerSelection, selection); //Checks if computer is round winner\r\n\r\n    addSelectionResult(computerSelection, computerWinner);\r\n    addSelectionResult(selection, playerWinner);\r\n\r\n    if (playerWinner) incrementScore(playerScoreSpan); //uptick point for player\r\n    if (computerWinner) incrementScore(computerScoreSpan); //uptick point for computer\r\n\r\n    endGame(playerScoreSpan, computerScoreSpan); //Checks if the game is over.\r\n};\r\n\r\n// Function for uptick score\r\nfunction incrementScore(scoreSpan) {\r\n    scoreSpan.innerText = parseInt(scoreSpan.innerText) + 1;\r\n};\r\n\r\n// Adds div whit result to finalColumn\r\nfunction addSelectionResult(selection, winner) {\r\n    const div = document.createElement('div');\r\n    div.innerText = selection.emoji;\r\n    div.classList.add('resultSelection'); // Adds class to Css styling for loser\r\n    if (winner) div.classList.add('winner'); // Adds class to Css styling for winner\r\n    finalColumn.after(div);\r\n};\r\n\r\n// Function for declaring round winner\r\nfunction isWinner(selection, opponentSelection) {\r\n    return selection.beats === opponentSelection.name;\r\n};\r\n\r\n// Function for letting the computer making its choice by random\r\nfunction computerRandomSelect() {\r\n    const randomIndex = Math.floor(Math.random() * selections.length);\r\n    return selections[randomIndex];\r\n};\r\n\r\n// Function for ending the game, code inside only runs if any player reached set score\r\nfunction endGame(playerScore, computerScore) {\r\n    if (playerScore.innerText == 3 || computerScore.innerText == 3) {\r\n        const winner = playerScore.innerText > computerScore.innerText ? document.getElementById('playerName').innerText : 'Computer';\r\n\r\n        // Disable all buttons by hiding them using Css class selector 'hidden'\r\n        const disableBtns = document.querySelectorAll('.selection');\r\n        for (const disableBtn of disableBtns) {\r\n            disableBtn.classList.add('hidden');\r\n        };\r\n\r\n        // Creates a div containing a H1 and a Button Element for declaring winner and restarting the game.\r\n        const div = document.createElement('div');\r\n        div.classList.add('newGameDiv');\r\n\r\n        const h1 = document.createElement('H1');\r\n        h1.setAttribute('id', 'victoryH1');\r\n        h1.innerText = `${winner} is the winner!`;\r\n\r\n        const btn = document.createElement('button');\r\n        btn.innerText = 'New Game';\r\n        btn.setAttribute('id', 'newGameBtn');\r\n        btn.addEventListener('click', ()=>{\r\n            location.reload();\r\n        });\r\n\r\n        document.querySelector('.selections').append(div);\r\n        div.append(h1, btn);\r\n    };\r\n};"],"names":["$2b6e161c9edcf319$var$selectionBtns","document","querySelectorAll","$2b6e161c9edcf319$var$finalColumn","querySelector","$2b6e161c9edcf319$var$computerScoreSpan","$2b6e161c9edcf319$var$playerScoreSpan","$2b6e161c9edcf319$var$selections","name","emoji","beats","$2b6e161c9edcf319$var$incrementScore","scoreSpan","innerText","parseInt","$2b6e161c9edcf319$var$addSelectionResult","selection","winner","div","createElement","classList","add","after","$2b6e161c9edcf319$var$isWinner","opponentSelection","getElementById","addEventListener","event","preventDefault","value","innerHTML","forEach","Element","remove","selectionBtn","selectionName","dataset","computerSelection","randomIndex","Math","floor","random","length","$2b6e161c9edcf319$var$computerRandomSelect","playerWinner","computerWinner","playerScore","computerScore","disableBtns","disableBtn","h1","setAttribute","btn","location","reload","append","$2b6e161c9edcf319$var$endGame","$2b6e161c9edcf319$var$makeSelection","find"],"version":3,"file":"index.e31c1d05.js.map"}